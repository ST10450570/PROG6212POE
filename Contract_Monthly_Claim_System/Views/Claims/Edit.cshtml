@model ClaimEditViewModel

@{
    ViewData["Title"] = $"Edit Claim - {Model.Id}";
    var isReturnedClaim = Model.Status == ClaimStatus.Returned;
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        @if (isReturnedClaim)
        {
            <div class="alert alert-warning">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <strong>This claim was returned for corrections.</strong> Please review the reviewer comments on the details page and make the necessary changes before resubmitting.
            </div>
        }

        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-edit me-2"></i>
                    @(isReturnedClaim ? "Correct Claim" : "Edit Claim")
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="Status" />

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="HoursWorked" class="form-label"></label>
                            <input asp-for="HoursWorked" class="form-control" />
                            <span asp-validation-for="HoursWorked" class="text-danger"></span>
                        </div>

                        <div class="col-md-6 mb-3">
                            <label asp-for="HourlyRate" class="form-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">R</span>
                                <input asp-for="HourlyRate" class="form-control" />
                            </div>
                            <span asp-validation-for="HourlyRate" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="WorkDescription" class="form-label"></label>
                        <textarea asp-for="WorkDescription" class="form-control" rows="4"
                                  placeholder="Describe the work performed during this period..."></textarea>
                        <span asp-validation-for="WorkDescription" class="text-danger"></span>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Notes" class="form-label"></label>
                        <textarea asp-for="Notes" class="form-control" rows="3"
                                  placeholder="Any additional notes or comments (optional)..."></textarea>
                        <span asp-validation-for="Notes" class="text-danger"></span>
                    </div>

                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Total Amount:</strong>
                        <span id="totalAmountPreview">@((Model.HoursWorked * Model.HourlyRate).ToString("C", new System.Globalization.CultureInfo("en-ZA")))</span>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i>
                            @(isReturnedClaim ? "Save Corrections" : "Save Changes")
                        </button>
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i> Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Calculate and update total amount in real-time
            const hoursInput = document.getElementById('HoursWorked');
            const rateInput = document.getElementById('HourlyRate');
            const totalPreview = document.getElementById('totalAmountPreview');

            function updateTotal() {
                const hours = parseFloat(hoursInput.value) || 0;
                const rate = parseFloat(rateInput.value) || 0;
                const total = hours * rate;

                totalPreview.textContent = new Intl.NumberFormat('en-ZA', {
                    style: 'currency',
                    currency: 'ZAR'
                }).format(total);
            }

            hoursInput.addEventListener('input', updateTotal);
            rateInput.addEventListener('input', updateTotal);
        });
    </script>
}